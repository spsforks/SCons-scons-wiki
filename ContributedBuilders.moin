 * Also see CustomBuilders, an automatically generated page - contains all pages with Builder in their names

 * Also see ToolsIndex, a list of external SCons Tools that are developed as packages and managed via a DVCS (Bazaar, Mercurial, Git,...)

= Builders =
 * LyxBuilder: Convert .lyx files to .tex. And teach PDF to understand .lyx files.

 * ReplacementBuilder: for when you need to take a *.in file and replace some variables in it, such as pkg-config .pc files or DBus .service files

 * UsingCodeGenerators: how to build an application and then use that application to generate other files

 * PythonExtensions: how to build python extension modules using SCons Swig & Boost

 * PyrexPythonExtensions: how to build pyrex python extension modules using SCons

 * BuildNumberProcessing: you have a build number or version number that needs to be included in the link

 * UsingCompilerBuilt asks about building a compiler/tool which is then used to build the application.

 * NasmBuilder: how to compile nasm source files

 * RpcBuilder: how to compile RPC protocol sources

 * CorbaBuilder: Builder for orbix corba idl generated C++ files.

 * CorbaTaoBuilder: Builder for tao corba idl generated C++ files.

 * AntlrBuilder: Builder for antlr to create targets that Scons can use

 * RunningConfigureAndMake: how to use SCons to run configure and make, as part of migrating from Makefiles

 * AccumulateBuilder: builder which "collects" files and/or directories for easy tarring/zipping for distribution

 * UicImageEmbedder: builder which generates an image collection by embedding image files into a c++ sourcefile

 * SubstInFileBuilder: provides TOOL_SUBST, which substitutes values from a dictionary into a file.  Can be used for autotools-like configure substitution or other purposes.

 * SubstInFileBuilder2: provides a slightly different implementation of SubstInFile that substitutes values from the environment into a file.

 * GenericSubstBuilder: Provides a powerful generic substitution mechanism and two helpers for regular files and headers.

 * DistTarBuilder: builds a tar file with an internal directory structure

 * DoxygenBuilder: generates doxygen docs automatically scanning for dependencies

 * CsharpBuilder: a builder to support C# using Mono, mcs, etc.

 * SwigBuilder: extra stuff about building SWIG beyond what's currently built-in.

 * NsisBuilder: see NsisSconsTool

 * EiffelStudioTool: Builder tool for the Eiffel programming language ([[http://dev.eiffel.com|EiffelStudio]]).

 * GchBuilder: Builder for gcc's precompiled headers

 * EnvValue: A value node which substitutes variables from the environment

 * CombineBuilder: Small Builder to include several c/c++ source files into one file

 * ArchiveBuilder: Builder to make archive (tar.gz, tar.bz2 or zip) in a simple way

 * GhcBuilder: Builder for the [[http://www.haskell.org/|Haskell]] programming language.

 * CxxTestBuilder: Integrate CxxTest unit testing framework into scons, together with a 'scons check' target. (make check clone from autotools)

 * ReStructuredTextBuilder: produces HTML or LaTeX output from reStructuredText input

 * CheetahBuilder: compiles and fills Cheetah templates

 * SconsDotNet - using SCons to build CoctaThorpe and VbDotNet

 * InstallFiles - Recursively scan the source for files to install according to glob and exclude patterns

 * ProtocBuilder - Generates Protocol Buffers target files from .proto source.

 * PyuicBuilder - Generates PyQt Python files from QtDesigner .ui source.

 * MsvcIncrementalLinking - Replaces the Program and SharedLibrary builders to support Microsoft Visual C++ incremental linking.

 * StaticPicLibrary - a builder like StaticLibrary but aiming to place position independant code (pic) in the library built

 * [[DownloadUnpack|Download- & UnpackBuilder]] - two correspondent builders, that can download and unpack a file (eg tar.gz / tar.bz2), usefull for installing libraries to a project

= Tools for specific librairies =
 * Qt4Tool: David García Garzón has been working on a Qt4 tool with much success

 * CheckBoostVersion: Boost does not provide pkg-config file so we need to check its version by other means
